#pragma kernel CSCulling

StructuredBuffer<float4x4> posAllBuffer;
RWStructuredBuffer<float4x4> posVisibleBuffer;
RWStructuredBuffer<int> bufferWithArgs;

float3 cmrPos;
float3 cmrDir;
float4x4 matrix_VP;

[numthreads(16, 16, 1)]
void CSCulling(uint3 id : SV_DispatchThreadID)
{
	uint index = id.y * 400 + id.x;

	float4x4 orgMat = posAllBuffer[index];
	float3 itemPos =float3(orgMat._m03,orgMat._m13,orgMat._m23);
	
	float3 itemDir = normalize(itemPos - cmrPos);
	float rot = dot(cmrDir, itemDir);

	float4 clipPos = mul(matrix_VP, float4(itemPos - cmrDir * 0.2, 1));
	
    if (max(abs(clipPos.x), abs(clipPos.y)) > clipPos.w + 0.7)
        return;

	int currentIndex;
	InterlockedAdd(bufferWithArgs[1], 1, currentIndex);
	posVisibleBuffer[currentIndex] = orgMat;

}
